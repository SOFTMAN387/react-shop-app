{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst addItem = {};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: addItem,\n  reducers: {\n    addToCart(state, action) {\n      return [...state, action.payload];\n    },\n\n    removeToCart(state, action) {\n      state = state.filter(x => {\n        return [x.id !== action.payload.id];\n      });\n    } // addBy(state, action) {\n    //     state.counter += action.payload;\n    // },\n    // lessBy(state, action) {\n    //     state.counter -= action.payload;\n    // }\n\n\n  }\n});\nexport const actions = cartSlice.actions;\nconst store = configureStore({\n  reducer: cartSlice.reducer\n});\nexport default store;","map":{"version":3,"sources":["D:/pb/mob_app/src/redux/Store.js"],"names":["configureStore","createSlice","addItem","cartSlice","name","initialState","reducers","addToCart","state","action","payload","removeToCart","filter","x","id","actions","store","reducer"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AACA,MAAMC,OAAO,GAAG,EAAhB;AACA,MAAMC,SAAS,GAAGF,WAAW,CAAC;AAC1BG,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAEH,OAFY;AAG1BI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrB,aAAO,CAAC,GAAGD,KAAJ,EAAWC,MAAM,CAACC,OAAlB,CAAP;AACH,KAHK;;AAINC,IAAAA,YAAY,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACxBD,MAAAA,KAAK,GAAGA,KAAK,CAACI,MAAN,CAAcC,CAAD,IAAO;AACxB,eAAO,CAACA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACC,OAAP,CAAeI,EAAzB,CAAP;AACH,OAFO,CAAR;AAGH,KARK,CASN;AACA;AACA;AAEA;AACA;AACA;;;AAfM;AAHgB,CAAD,CAA7B;AAsBA,OAAO,MAAMC,OAAO,GAAGZ,SAAS,CAACY,OAA1B;AACP,MAAMC,KAAK,GAAGhB,cAAc,CAAC;AACzBiB,EAAAA,OAAO,EAAEd,SAAS,CAACc;AADM,CAAD,CAA5B;AAIA,eAAeD,KAAf","sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\nconst addItem = {};\r\nconst cartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState: addItem,\r\n    reducers: {\r\n        addToCart(state, action) {\r\n            return [...state, action.payload];\r\n        },\r\n        removeToCart(state, action) {\r\n            state = state.filter((x) => {\r\n                return [x.id !== action.payload.id];\r\n            })\r\n        }\r\n        // addBy(state, action) {\r\n        //     state.counter += action.payload;\r\n        // },\r\n\r\n        // lessBy(state, action) {\r\n        //     state.counter -= action.payload;\r\n        // }\r\n    }\r\n})\r\n\r\nexport const actions = cartSlice.actions;\r\nconst store = configureStore({\r\n    reducer: cartSlice.reducer\r\n});\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}