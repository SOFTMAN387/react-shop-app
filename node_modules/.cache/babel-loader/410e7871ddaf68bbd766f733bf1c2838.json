{"ast":null,"code":"import _toConsumableArray from\"D:/pb/mob_app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{configureStore,createSlice}from\"@reduxjs/toolkit\";var addItem=[];var cartSlice=createSlice({name:\"cart\",initialState:addItem,reducers:{addToCart:function addToCart(state,action){return[].concat(_toConsumableArray(state),[action.payload]);},removeToCart:function removeToCart(state,action){state=state.filter(function(x){return x.id!==action.payload.id;});return state;}// addBy(state, action) {\n//     state.counter += action.payload;\n// },\n// lessBy(state, action) {\n//     state.counter -= action.payload;\n// }\n}});export var actions=cartSlice.actions;var store=configureStore({reducer:cartSlice.reducer});export default store;","map":{"version":3,"sources":["D:/pb/mob_app/src/redux/Store.js"],"names":["configureStore","createSlice","addItem","cartSlice","name","initialState","reducers","addToCart","state","action","payload","removeToCart","filter","x","id","actions","store","reducer"],"mappings":"wGAAA,OAASA,cAAT,CAAyBC,WAAzB,KAA4C,kBAA5C,CACA,GAAMC,CAAAA,OAAO,CAAG,EAAhB,CACA,GAAMC,CAAAA,SAAS,CAAGF,WAAW,CAAC,CAC1BG,IAAI,CAAE,MADoB,CAE1BC,YAAY,CAAEH,OAFY,CAG1BI,QAAQ,CAAE,CACNC,SADM,oBACIC,KADJ,CACWC,MADX,CACmB,CACrB,mCAAWD,KAAX,GAAkBC,MAAM,CAACC,OAAzB,GACH,CAHK,CAINC,YAJM,uBAIOH,KAJP,CAIcC,MAJd,CAIsB,CACxBD,KAAK,CAAGA,KAAK,CAACI,MAAN,CAAa,SAACC,CAAD,CAAO,CACxB,MAAOA,CAAAA,CAAC,CAACC,EAAF,GAASL,MAAM,CAACC,OAAP,CAAeI,EAA/B,CACH,CAFO,CAAR,CAGA,MAAON,CAAAA,KAAP,CACH,CAED;AACA;AACA;AAEA;AACA;AACA;AAjBM,CAHgB,CAAD,CAA7B,CAwBA,MAAO,IAAMO,CAAAA,OAAO,CAAGZ,SAAS,CAACY,OAA1B,CACP,GAAMC,CAAAA,KAAK,CAAGhB,cAAc,CAAC,CACzBiB,OAAO,CAAEd,SAAS,CAACc,OADM,CAAD,CAA5B,CAIA,cAAeD,CAAAA,KAAf","sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\nconst addItem = [];\r\nconst cartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState: addItem,\r\n    reducers: {\r\n        addToCart(state, action) {\r\n            return [...state, action.payload];\r\n        },\r\n        removeToCart(state, action) {\r\n            state = state.filter((x) => {\r\n                return x.id !== action.payload.id;\r\n            })\r\n            return state;\r\n        }\r\n\r\n        // addBy(state, action) {\r\n        //     state.counter += action.payload;\r\n        // },\r\n\r\n        // lessBy(state, action) {\r\n        //     state.counter -= action.payload;\r\n        // }\r\n    }\r\n})\r\n\r\nexport const actions = cartSlice.actions;\r\nconst store = configureStore({\r\n    reducer: cartSlice.reducer\r\n});\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}